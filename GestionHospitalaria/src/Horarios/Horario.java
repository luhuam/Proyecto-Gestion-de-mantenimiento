package Horarios;

import Conexion.ConnectionPool;
import InicioSesion.inicioMedico;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class Horario extends javax.swing.JFrame {

    Connection conetE;
    DefaultTableModel modelo;
    Statement st;
    ResultSet rs;
    int idE;
    private TableRowSorter trsfiltro;
    String filtro;

    public Horario() {
        initComponents();
        setLocationRelativeTo(null);
        mensajeFaltanCampos_Label.setVisible(false);
        mostrarHorarios();
    }

    public void contarPacientes() throws SQLException {
        String contarsql = "SELECT count(DISTINCT dni_paciente) FROM citas WHERE citas.dni_medico = " + Integer.parseInt(dniMedicoTxtField_Horario.getText());
        System.out.println("contarsql es: " + contarsql);
        int contador = 0;
        System.out.println("valor de contador es: " + contador);
        conetE = ConnectionPool.getInstance().getConnection();
        try {
            st = conetE.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            rs = st.executeQuery(contarsql);
        } catch (SQLException ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while (rs.next()) {
                contador = contador + 1;
            }
            System.out.println("contador ahora es: " + contador);
        } catch (SQLException ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }
        totalPacientesTxtField_Horario.setText(Integer.toString(contador));
        totalPacientesTxtField_Horario.setEditable(false);
    }

    public void mostrarHorarios() {

        String sql = "SELECT citas.codigo_cita, citas.dni_paciente, paciente.apellido_paterno,\n"
                + "paciente.apellido_materno, paciente.eps, citas.fecha, citas.turno, citas.nro_orden\n"
                + "FROM citas INNER JOIN paciente ON paciente.id_dni = citas.dni_paciente\n"
                + "ORDER BY codigo_cita";

        try {
            conetE = ConnectionPool.getInstance().getConnection();
            st = conetE.createStatement();
            rs = st.executeQuery(sql);
            Object[] datosHorario = new Object[9];
            modelo = (DefaultTableModel) horariosTable_Horario.getModel();

            while (rs.next()) {
                datosHorario[0] = rs.getString("codigo_cita");
                datosHorario[1] = rs.getString("dni_paciente");
                datosHorario[2] = rs.getString("apellido_paterno");
                datosHorario[3] = rs.getString("apellido_materno");
                datosHorario[4] = rs.getString("eps");
                datosHorario[5] = rs.getDate("fecha");
                datosHorario[6] = rs.getTime("fecha");
                datosHorario[7] = rs.getInt("turno");
                datosHorario[8] = rs.getInt("nro_orden");

                modelo.addRow(datosHorario);
            }
            horariosTable_Horario.setModel(modelo);
        } catch (SQLException e) {

        }
    }

    public void buscarHorarios(String buscar) {
        horariosTable_Horario.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundAsistencia = new javax.swing.JPanel();
        asistenciaTitle_Asistencia = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        botonRegresar_Asistencia = new javax.swing.JButton();
        pacientesLabel_Horario = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        horariosTable_Horario = new javax.swing.JTable();
        backgroundAsistencia1 = new javax.swing.JPanel();
        asistenciaTitle_Asistencia1 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        botonRegresar_Asistencia1 = new javax.swing.JButton();
        dniMedicoLabel_Horario2 = new javax.swing.JLabel();
        susAsistenciasLabel_Asistencia1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        susAsistenciasTable_Asistencia1 = new javax.swing.JTable();
        botonBuscarPanel_Horario = new javax.swing.JButton();
        fechaLabel_Horario = new javax.swing.JLabel();
        turnoLabel_Horario = new javax.swing.JLabel();
        turnoTxtField_Horario = new javax.swing.JTextField();
        dniMedicoTxtField_Horario = new javax.swing.JTextField();
        totalPacientesTxtField_Horario = new javax.swing.JTextField();
        totalPacientesLabel_Horario = new javax.swing.JLabel();
        jDateChooserFecha_Horario = new com.toedter.calendar.JDateChooser();
        mensajeFaltanCampos_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundAsistencia.setBackground(new java.awt.Color(255, 255, 255));
        backgroundAsistencia.setMinimumSize(new java.awt.Dimension(1280, 431));
        backgroundAsistencia.setPreferredSize(new java.awt.Dimension(1280, 645));
        backgroundAsistencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        asistenciaTitle_Asistencia.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        asistenciaTitle_Asistencia.setText("HORARIOS");
        backgroundAsistencia.add(asistenciaTitle_Asistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 47, -1, -1));

        jSeparator8.setBackground(new java.awt.Color(217, 217, 217));
        jSeparator8.setForeground(new java.awt.Color(217, 217, 217));
        jSeparator8.setPreferredSize(new java.awt.Dimension(1280, 0));
        backgroundAsistencia.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 98, 1280, 20));

        botonRegresar_Asistencia.setBackground(new java.awt.Color(255, 255, 255));
        botonRegresar_Asistencia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonRegresar_Asistencia.setForeground(new java.awt.Color(41, 98, 255));
        botonRegresar_Asistencia.setText("< REGRESAR");
        botonRegresar_Asistencia.setBorder(null);
        botonRegresar_Asistencia.setBorderPainted(false);
        botonRegresar_Asistencia.setContentAreaFilled(false);
        botonRegresar_Asistencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresar_Asistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegresar_AsistenciaMouseClicked(evt);
            }
        });
        botonRegresar_Asistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresar_AsistenciaActionPerformed(evt);
            }
        });
        backgroundAsistencia.add(botonRegresar_Asistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 80, 30));

        pacientesLabel_Horario.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        pacientesLabel_Horario.setText("PACIENTES");
        backgroundAsistencia.add(pacientesLabel_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 242, -1, -1));

        horariosTable_Horario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO CITA", "DNI PACIENTE", "APELLIDO PATERNO", "APELLIDO MATERNO", "EPS", "FECHA", "HORA", "TURNO", "N° ORDEN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        horariosTable_Horario.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(horariosTable_Horario);
        if (horariosTable_Horario.getColumnModel().getColumnCount() > 0) {
            horariosTable_Horario.getColumnModel().getColumn(0).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(1).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(2).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(3).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(4).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(5).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(6).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(7).setResizable(false);
            horariosTable_Horario.getColumnModel().getColumn(8).setResizable(false);
        }

        backgroundAsistencia.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 1060, 180));

        backgroundAsistencia1.setBackground(new java.awt.Color(255, 255, 255));
        backgroundAsistencia1.setMinimumSize(new java.awt.Dimension(1280, 431));
        backgroundAsistencia1.setPreferredSize(new java.awt.Dimension(1280, 645));
        backgroundAsistencia1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        asistenciaTitle_Asistencia1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        asistenciaTitle_Asistencia1.setText("HORARIOS");
        backgroundAsistencia1.add(asistenciaTitle_Asistencia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 47, -1, -1));

        jSeparator9.setBackground(new java.awt.Color(217, 217, 217));
        jSeparator9.setForeground(new java.awt.Color(217, 217, 217));
        jSeparator9.setPreferredSize(new java.awt.Dimension(1280, 0));
        backgroundAsistencia1.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 98, 1280, 20));

        botonRegresar_Asistencia1.setBackground(new java.awt.Color(255, 255, 255));
        botonRegresar_Asistencia1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonRegresar_Asistencia1.setForeground(new java.awt.Color(41, 98, 255));
        botonRegresar_Asistencia1.setText("< REGRESAR");
        botonRegresar_Asistencia1.setBorder(null);
        botonRegresar_Asistencia1.setBorderPainted(false);
        botonRegresar_Asistencia1.setContentAreaFilled(false);
        botonRegresar_Asistencia1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresar_Asistencia1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegresar_Asistencia1MouseClicked(evt);
            }
        });
        botonRegresar_Asistencia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresar_Asistencia1ActionPerformed(evt);
            }
        });
        backgroundAsistencia1.add(botonRegresar_Asistencia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 80, 30));

        dniMedicoLabel_Horario2.setText("DNI_MEDICO");
        backgroundAsistencia1.add(dniMedicoLabel_Horario2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        susAsistenciasLabel_Asistencia1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        susAsistenciasLabel_Asistencia1.setText("PACIENTES");
        backgroundAsistencia1.add(susAsistenciasLabel_Asistencia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 242, -1, -1));

        susAsistenciasTable_Asistencia1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO CITA", "DNI PACIENTE", "APELLIDO PATERNO", "APELLIDO MATERNO", "EPS", "FECHA", "TURNO", "N° ORDEN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        susAsistenciasTable_Asistencia1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(susAsistenciasTable_Asistencia1);
        if (susAsistenciasTable_Asistencia1.getColumnModel().getColumnCount() > 0) {
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(0).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(1).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(2).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(3).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(4).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(5).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(6).setResizable(false);
            susAsistenciasTable_Asistencia1.getColumnModel().getColumn(7).setResizable(false);
        }

        backgroundAsistencia1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 1060, 180));

        botonBuscarPanel_Horario.setBackground(new java.awt.Color(199, 247, 247));
        botonBuscarPanel_Horario.setText("BUSCAR");
        botonBuscarPanel_Horario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonBuscarPanel_Horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarPanel_HorarioActionPerformed(evt);
            }
        });
        backgroundAsistencia1.add(botonBuscarPanel_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 180, 90, 40));

        fechaLabel_Horario.setText("FECHA");
        backgroundAsistencia1.add(fechaLabel_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, -1, -1));

        turnoLabel_Horario.setText("TURNO");
        backgroundAsistencia1.add(turnoLabel_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, -1, -1));

        turnoTxtField_Horario.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        turnoTxtField_Horario.setPreferredSize(new java.awt.Dimension(284, 35));
        turnoTxtField_Horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoTxtField_HorarioActionPerformed(evt);
            }
        });
        backgroundAsistencia1.add(turnoTxtField_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 180, 250, -1));

        dniMedicoTxtField_Horario.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        dniMedicoTxtField_Horario.setPreferredSize(new java.awt.Dimension(284, 35));
        dniMedicoTxtField_Horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dniMedicoTxtField_HorarioActionPerformed(evt);
            }
        });
        backgroundAsistencia1.add(dniMedicoTxtField_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 250, -1));

        totalPacientesTxtField_Horario.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        totalPacientesTxtField_Horario.setPreferredSize(new java.awt.Dimension(284, 35));
        totalPacientesTxtField_Horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPacientesTxtField_HorarioActionPerformed(evt);
            }
        });
        backgroundAsistencia1.add(totalPacientesTxtField_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 510, 180, -1));

        totalPacientesLabel_Horario.setText("TOTAL PACIENTES");
        backgroundAsistencia1.add(totalPacientesLabel_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 490, -1, -1));
        backgroundAsistencia1.add(jDateChooserFecha_Horario, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 180, 30));

        mensajeFaltanCampos_Label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mensajeFaltanCampos_Label.setForeground(new java.awt.Color(255, 0, 0));
        mensajeFaltanCampos_Label.setText("¡Hay campos faltantes!");
        backgroundAsistencia1.add(mensajeFaltanCampos_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 180, -1, 30));

        backgroundAsistencia.add(backgroundAsistencia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(backgroundAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 1300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(backgroundAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresar_AsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresar_AsistenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRegresar_AsistenciaActionPerformed
    public void buscar(String buscar1, Date buscar2, String buscar3) {
        BuscarHorario p = new BuscarHorario();

        DefaultTableModel modelo = p.buscarHorarios(buscar1, buscar2, buscar3);
        horariosTable_Horario.setModel(modelo);
    }
    private void botonRegresar_AsistenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegresar_AsistenciaMouseClicked
        this.dispose();
        new inicioMedico().setVisible(true);
    }//GEN-LAST:event_botonRegresar_AsistenciaMouseClicked

    private void dniMedicoTxtField_HorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dniMedicoTxtField_HorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dniMedicoTxtField_HorarioActionPerformed

    private void botonRegresar_Asistencia1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegresar_Asistencia1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRegresar_Asistencia1MouseClicked

    private void botonRegresar_Asistencia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresar_Asistencia1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRegresar_Asistencia1ActionPerformed

    private void botonBuscarPanel_HorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarPanel_HorarioActionPerformed
        int vacio = 0;
        try {
            Date fechaChooser = new Date(jDateChooserFecha_Horario.getDate().getTime());
            if (turnoTxtField_Horario.getText().isEmpty() || dniMedicoTxtField_Horario.getText().isEmpty()) {
                vacio = 1;
                mensajeFaltanCampos_Label.setVisible(true);
            } else {
                vacio = 0;
                mensajeFaltanCampos_Label.setVisible(false);
                buscar(dniMedicoTxtField_Horario.getText(), fechaChooser, turnoTxtField_Horario.getText());
                contarPacientes();
                Principal.main(null);
            }
        } catch (NullPointerException e) {
            mensajeFaltanCampos_Label.setVisible(true);
        } catch (InterruptedException | SQLException ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonBuscarPanel_HorarioActionPerformed

    private void turnoTxtField_HorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoTxtField_HorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_turnoTxtField_HorarioActionPerformed

    private void totalPacientesTxtField_HorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPacientesTxtField_HorarioActionPerformed

    }//GEN-LAST:event_totalPacientesTxtField_HorarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Horario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Horario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel asistenciaTitle_Asistencia;
    private javax.swing.JLabel asistenciaTitle_Asistencia1;
    private javax.swing.JPanel backgroundAsistencia;
    private javax.swing.JPanel backgroundAsistencia1;
    private javax.swing.JButton botonBuscarPanel_Horario;
    private javax.swing.JButton botonRegresar_Asistencia;
    private javax.swing.JButton botonRegresar_Asistencia1;
    private javax.swing.JLabel dniMedicoLabel_Horario2;
    private javax.swing.JTextField dniMedicoTxtField_Horario;
    private javax.swing.JLabel fechaLabel_Horario;
    private javax.swing.JTable horariosTable_Horario;
    private com.toedter.calendar.JDateChooser jDateChooserFecha_Horario;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel mensajeFaltanCampos_Label;
    private javax.swing.JLabel pacientesLabel_Horario;
    private javax.swing.JLabel susAsistenciasLabel_Asistencia1;
    private javax.swing.JTable susAsistenciasTable_Asistencia1;
    private javax.swing.JLabel totalPacientesLabel_Horario;
    private javax.swing.JTextField totalPacientesTxtField_Horario;
    private javax.swing.JLabel turnoLabel_Horario;
    private javax.swing.JTextField turnoTxtField_Horario;
    // End of variables declaration//GEN-END:variables
}

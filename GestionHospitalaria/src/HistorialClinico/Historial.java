/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HistorialClinico;

import Conexion.ConnectionPool;
import InicioSesion.inicioRecepcionista;
import com.mysql.jdbc.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Julian
 */
public class Historial extends javax.swing.JFrame {

    Connection conetE;
    DefaultTableModel modelo = new DefaultTableModel();
    Statement st;
    ResultSet rs;
    int idE;
    private TableRowSorter trsfiltro;
    String filtro;

    /**
     * Creates new form Historial
     */
    public Historial() {
        initComponents();
        setLocationRelativeTo(null);
        metodoListarHistorial();
    }

    private void metodoListarHistorial() {
        String sql = "SELECT id_historial, cod_medico, dni_paciente, fecha_redaccion, codigo_especialidad, tipo_sangre, peso, talla, presion, observaciones FROM historial_clinico";

        try {
            conetE = ConnectionPool.getInstance().getConnection();
            st = conetE.createStatement();
            rs = st.executeQuery(sql);
            Object[] historial = new Object[10];
            modelo = (DefaultTableModel) TablaHistorial.getModel();

            while (rs.next()) {
                historial[0] = rs.getInt("id_historial");
                historial[1] = rs.getInt("cod_medico");
                historial[2] = rs.getInt("dni_paciente");
                historial[3] = rs.getString("fecha_redaccion");
                historial[4] = rs.getInt("codigo_especialidad");
                historial[5] = rs.getString("tipo_sangre");
                historial[6] = rs.getFloat("peso");
                historial[7] = rs.getFloat("talla");
                historial[8] = rs.getFloat("presion");
                historial[9] = rs.getString("observaciones");

                modelo.addRow(historial);
            }
            TablaHistorial.setModel(modelo);
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    public class SeccionCritica {

        Historial historial = new Historial();
        private int hist;

        void registrar() throws SQLException {
            Connection conH = ConnectionPool.getInstance().getConnection();
            registroHistorial uno = new registroHistorial();
            int hist = 0;
            PreparedStatement pst = null;
            ResultSet rs = null;

            String sql = "INSERT INTO historial_clinico(cod_medico, dni_paciente, codigo_especialidad, tipo_sangre, peso, talla, presion, observaciones) VALUES(?, ?, ?, ?, ?, ?, ?, ?)";

            try {
                PreparedStatement psd = (PreparedStatement) conH.prepareStatement(sql);
                psd.setInt(1, Integer.parseInt(HC_cod_medico.getText()));
                psd.setInt(2, Integer.parseInt(HC_paciente_dni.getText()));
                psd.setInt(3, Integer.parseInt(HC_cod_especialidad.getText()));
                psd.setString(4, HC_sangre.getText());
                psd.setFloat(5, Float.parseFloat(HC_peso.getText()));
                psd.setFloat(6, Float.parseFloat(HC_talla.getText()));
                psd.setFloat(7, Float.parseFloat(HC_presion.getText()));
                psd.setString(8, HC_observaciones.getText());

                int n = psd.executeUpdate();

                if (n > 0) {
                    metodoListarHistorial();
                    System.out.println("Registro Guardado");
                    hist = hist + 1;
                }
            } catch (SQLException e) {
                System.err.print(e.toString());
                //JOptionPane.showMessageDialog(this.cita, "Ocurrio un error inesperado.\nFavor comunicarse con el administrador.");
                System.out.println("Ocurrio un error inesperado.\nFavor comunicarse con el administrador");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaHistorial = new javax.swing.JTable();
        Especialista_Title = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        boton_regresarHistorial = new javax.swing.JButton();
        dniBuscadorLabel_Especialistas = new javax.swing.JLabel();
        TF_Historial = new javax.swing.JTextField();
        btn_buscarHistorial = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        HC_peso = new javax.swing.JTextField();
        HC_observaciones = new javax.swing.JTextField();
        HC_cod_medico = new javax.swing.JTextField();
        T_sangre = new javax.swing.JLabel();
        T_sangre1 = new javax.swing.JLabel();
        talla = new javax.swing.JLabel();
        HC_paciente_dni = new javax.swing.JTextField();
        HC_sangre = new javax.swing.JTextField();
        HC_talla = new javax.swing.JTextField();
        Presion = new javax.swing.JLabel();
        especialidad = new javax.swing.JLabel();
        HC_presion = new javax.swing.JTextField();
        HC_cod_especialidad = new javax.swing.JTextField();
        T_sangre2 = new javax.swing.JLabel();
        T_sangre3 = new javax.swing.JLabel();
        T_sangre4 = new javax.swing.JLabel();
        btn_registrar_hc = new javax.swing.JButton();
        btn_limpiar_hc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        TablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "COD. MEDICO", "DNI PACIENTE", "FECHA REDACCION", "COD. ESPECIALIDAD", "T. SANGRE", "PESO", "TALLA", "PRESION", "OBSERVACIONES"
            }
        ));
        jScrollPane1.setViewportView(TablaHistorial);
        if (TablaHistorial.getColumnModel().getColumnCount() > 0) {
            TablaHistorial.getColumnModel().getColumn(3).setHeaderValue("FECHA REDACCION");
            TablaHistorial.getColumnModel().getColumn(4).setHeaderValue("COD. ESPECIALIDAD");
            TablaHistorial.getColumnModel().getColumn(5).setHeaderValue("T. SANGRE");
            TablaHistorial.getColumnModel().getColumn(6).setHeaderValue("PESO");
            TablaHistorial.getColumnModel().getColumn(7).setHeaderValue("TALLA");
            TablaHistorial.getColumnModel().getColumn(8).setHeaderValue("PRESION");
            TablaHistorial.getColumnModel().getColumn(9).setHeaderValue("OBSERVACIONES");
        }

        Especialista_Title.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        Especialista_Title.setText("HISTORIAL CLÍNICO");

        jSeparator8.setBackground(new java.awt.Color(217, 217, 217));
        jSeparator8.setForeground(new java.awt.Color(217, 217, 217));
        jSeparator8.setPreferredSize(new java.awt.Dimension(1280, 0));

        boton_regresarHistorial.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        boton_regresarHistorial.setForeground(new java.awt.Color(41, 98, 255));
        boton_regresarHistorial.setText("< REGRESAR");
        boton_regresarHistorial.setBorder(null);
        boton_regresarHistorial.setBorderPainted(false);
        boton_regresarHistorial.setContentAreaFilled(false);
        boton_regresarHistorial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boton_regresarHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_regresarHistorialMouseClicked(evt);
            }
        });
        boton_regresarHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_regresarHistorialActionPerformed(evt);
            }
        });

        dniBuscadorLabel_Especialistas.setText("Buscar en historial clínico");

        TF_Historial.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        TF_Historial.setPreferredSize(new java.awt.Dimension(284, 35));
        TF_Historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_HistorialActionPerformed(evt);
            }
        });
        TF_Historial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TF_HistorialKeyTyped(evt);
            }
        });

        btn_buscarHistorial.setBackground(new java.awt.Color(204, 255, 255));
        btn_buscarHistorial.setText("BUSCAR");
        btn_buscarHistorial.setBorder(null);
        btn_buscarHistorial.setPreferredSize(new java.awt.Dimension(136, 31));
        btn_buscarHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarHistorialActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Registro nuevo");

        HC_peso.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_peso.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_peso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_pesoActionPerformed(evt);
            }
        });
        HC_peso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_pesoKeyTyped(evt);
            }
        });

        HC_observaciones.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_observaciones.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_observaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_observacionesActionPerformed(evt);
            }
        });
        HC_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_observacionesKeyTyped(evt);
            }
        });

        HC_cod_medico.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_cod_medico.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_cod_medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_cod_medicoActionPerformed(evt);
            }
        });
        HC_cod_medico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_cod_medicoKeyTyped(evt);
            }
        });

        T_sangre.setText("Peso");

        T_sangre1.setText("T. de Sangre");

        talla.setText("Talla");

        HC_paciente_dni.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_paciente_dni.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_paciente_dni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_paciente_dniActionPerformed(evt);
            }
        });
        HC_paciente_dni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_paciente_dniKeyTyped(evt);
            }
        });

        HC_sangre.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_sangre.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_sangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_sangreActionPerformed(evt);
            }
        });
        HC_sangre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_sangreKeyTyped(evt);
            }
        });

        HC_talla.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_talla.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_talla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_tallaActionPerformed(evt);
            }
        });
        HC_talla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_tallaKeyTyped(evt);
            }
        });

        Presion.setText("Presión");

        especialidad.setText("Cod. Especialidad");

        HC_presion.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_presion.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_presion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_presionActionPerformed(evt);
            }
        });
        HC_presion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_presionKeyTyped(evt);
            }
        });

        HC_cod_especialidad.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        HC_cod_especialidad.setPreferredSize(new java.awt.Dimension(284, 35));
        HC_cod_especialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC_cod_especialidadActionPerformed(evt);
            }
        });
        HC_cod_especialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HC_cod_especialidadKeyTyped(evt);
            }
        });

        T_sangre2.setText("DNI Paciente");

        T_sangre3.setText("Cod. Médico");

        T_sangre4.setText("Observaciones");

        btn_registrar_hc.setBackground(new java.awt.Color(204, 255, 255));
        btn_registrar_hc.setText("REGISTRAR");
        btn_registrar_hc.setBorder(null);
        btn_registrar_hc.setPreferredSize(new java.awt.Dimension(136, 31));
        btn_registrar_hc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_registrar_hcMouseClicked(evt);
            }
        });
        btn_registrar_hc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrar_hcActionPerformed(evt);
            }
        });

        btn_limpiar_hc.setBackground(new java.awt.Color(204, 255, 255));
        btn_limpiar_hc.setText("LIMPIAR");
        btn_limpiar_hc.setBorder(null);
        btn_limpiar_hc.setPreferredSize(new java.awt.Dimension(136, 31));
        btn_limpiar_hc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_limpiar_hcMouseClicked(evt);
            }
        });
        btn_limpiar_hc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiar_hcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Especialista_Title)
                .addGap(480, 480, 480))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(boton_regresarHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dniBuscadorLabel_Especialistas)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TF_Historial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btn_buscarHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(HC_sangre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(T_sangre1))
                                    .addGap(20, 20, 20)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(HC_peso, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(T_sangre))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(talla)
                                        .addComponent(HC_talla, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(HC_paciente_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(T_sangre2))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(HC_cod_medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(HC_presion, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Presion))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(especialidad)
                                        .addComponent(HC_cod_especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                            .addComponent(T_sangre3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(T_sangre4)
                                .addGap(180, 180, 180))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(HC_observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_registrar_hc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_limpiar_hc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Especialista_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton_regresarHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(dniBuscadorLabel_Especialistas, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_Historial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscarHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(T_sangre2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T_sangre3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T_sangre4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_registrar_hc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_limpiar_hc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HC_cod_medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HC_paciente_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(T_sangre1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T_sangre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(talla, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Presion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HC_peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HC_sangre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HC_talla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HC_presion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HC_cod_especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(HC_observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_regresarHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_regresarHistorialMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new inicioRecepcionista().setVisible(true);
    }//GEN-LAST:event_boton_regresarHistorialMouseClicked

    private void boton_regresarHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_regresarHistorialActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_boton_regresarHistorialActionPerformed

    private void TF_HistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_HistorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_HistorialActionPerformed

    private void TF_HistorialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_HistorialKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_HistorialKeyTyped

    public void buscar(String buscar) throws RemoteException {
        Buscar p = new Buscar();

        DefaultTableModel modelo = p.Historial(buscar);
        TablaHistorial.setModel(modelo);
    }

    private void btn_buscarHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarHistorialActionPerformed
        try {
            // TODO add your handling code here:
            buscar(TF_Historial.getText());
        } catch (RemoteException ex) {
            Logger.getLogger(Historial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_buscarHistorialActionPerformed

    private void HC_pesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_pesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_pesoActionPerformed

    private void HC_pesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_pesoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_pesoKeyTyped

    private void HC_observacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_observacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_observacionesActionPerformed

    private void HC_observacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_observacionesKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_observacionesKeyTyped

    private void HC_cod_medicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_cod_medicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_cod_medicoActionPerformed

    private void HC_cod_medicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_cod_medicoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_cod_medicoKeyTyped

    private void HC_paciente_dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_paciente_dniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_paciente_dniActionPerformed

    private void HC_paciente_dniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_paciente_dniKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_paciente_dniKeyTyped

    private void HC_sangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_sangreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_sangreActionPerformed

    private void HC_sangreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_sangreKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_sangreKeyTyped

    private void HC_tallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_tallaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_tallaActionPerformed

    private void HC_tallaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_tallaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_tallaKeyTyped

    private void HC_presionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_presionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_presionActionPerformed

    private void HC_presionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_presionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_presionKeyTyped

    private void HC_cod_especialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC_cod_especialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_cod_especialidadActionPerformed

    private void HC_cod_especialidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HC_cod_especialidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_HC_cod_especialidadKeyTyped

    private void btn_registrar_hcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrar_hcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_registrar_hcActionPerformed

    private void btn_registrar_hcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_registrar_hcMouseClicked
        // TODO add your handling code here:
        if (!HC_paciente_dni.getText().isEmpty() && !HC_cod_medico.getText().isEmpty()
                && !HC_sangre.getText().isEmpty() && !HC_peso.getText().isEmpty()
                && !HC_talla.getText().isEmpty() && !HC_presion.getText().isEmpty()
                && !HC_cod_especialidad.getText().isEmpty() && !HC_observaciones.getText().isEmpty()) {
            DekkerHistorialClinico dekker = new DekkerHistorialClinico();
            SeccionCritica seccionCriticaDekker = new SeccionCritica();

            //Hilos aplicando exclución mutua con el algoritmo de Dekker.
            Thread hilo1 = new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        dekker.comenzar(0, seccionCriticaDekker);
                    } catch (SQLException ex) {
                        Logger.getLogger(Historial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            hilo1.start();
            this.dispose();
            Thread hilo2 = new Thread(new Runnable() {

                @Override
                public void run() {

                    try {
                        new Historial().setVisible(true);
                        
                        dekker.comenzar(1, seccionCriticaDekker);
                    } catch (SQLException ex) {
                        Logger.getLogger(Historial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            hilo2.start();

            try {
                hilo1.join();
                hilo2.join();
            } catch (InterruptedException ex) {
                Logger.getLogger(Historial.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.out.println(" Pacientes atendidos "
                    + "iteraciones por cada hilo: " + 2);
        } else {
            JOptionPane.showMessageDialog(null, "DEBE LLENAR TODOS LOS CAMPOS. ");
        }
    }//GEN-LAST:event_btn_registrar_hcMouseClicked

    private void btn_limpiar_hcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiar_hcMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_limpiar_hcMouseClicked

    private void btn_limpiar_hcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiar_hcActionPerformed
        // TODO add your handling code here:
        HC_cod_medico.setText("");
        HC_paciente_dni.setText("");
        HC_cod_especialidad.setText("");
        HC_sangre.setText("");
        HC_peso.setText("");
        HC_talla.setText("");
        HC_presion.setText("");
        HC_observaciones.setText("");

    }//GEN-LAST:event_btn_limpiar_hcActionPerformed

    private void LimpiarTabla() {
        TablaHistorial.setModel(new DefaultTableModel());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Especialista_Title;
    private javax.swing.JTextField HC_cod_especialidad;
    private javax.swing.JTextField HC_cod_medico;
    private javax.swing.JTextField HC_observaciones;
    private javax.swing.JTextField HC_paciente_dni;
    private javax.swing.JTextField HC_peso;
    private javax.swing.JTextField HC_presion;
    private javax.swing.JTextField HC_sangre;
    private javax.swing.JTextField HC_talla;
    private javax.swing.JLabel Presion;
    private javax.swing.JTextField TF_Historial;
    private javax.swing.JLabel T_sangre;
    private javax.swing.JLabel T_sangre1;
    private javax.swing.JLabel T_sangre2;
    private javax.swing.JLabel T_sangre3;
    private javax.swing.JLabel T_sangre4;
    private javax.swing.JTable TablaHistorial;
    private javax.swing.JButton boton_regresarHistorial;
    private javax.swing.JButton btn_buscarHistorial;
    private javax.swing.JButton btn_limpiar_hc;
    private javax.swing.JButton btn_registrar_hc;
    private javax.swing.JLabel dniBuscadorLabel_Especialistas;
    private javax.swing.JLabel especialidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel talla;
    // End of variables declaration//GEN-END:variables

}
